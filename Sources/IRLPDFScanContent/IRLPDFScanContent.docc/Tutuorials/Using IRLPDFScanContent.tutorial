@Tutorial(time: 5) {
    @Intro(title: "Using IRLPDFScanContent") {
        We will see how we can add pdf scanning functionality to a Standard SwiftUI Content View.
        1. Make sure you add the description for the key `NSCameraUsageDescription` in your `Info.plist`
        2. Add the Scanner & PDF View to your content
        3. Add present the scanner & react on observed value changes
    }
    
    @Section(title: "Update your Info.plist") {
        @ContentAndMedia {            
            To make sure the app can use the camera, we need to allow it to request permission.

        }
        @Steps {
            @Step {
                Open you `Info.plist` or go to `YourProject`/ `YourTarget` / `Info`
                @Code(name: "Info.plist", file: 00-Info.plist) 
            }
            @Step {
                Add `NSCameraUsageDescription` and the description for the User
                @Code(name: "Info.plist", file: 01-Info.plist) 
            }
        }
    }
    

    @Section(title: "Add the scanner capability") {
        @ContentAndMedia {            
            Once our Package is available in the project, we will now add the ability to scan a PDF
        }
        @Steps {
            @Step {
                Let's start with the "Hello world" SwiftUI view
                @Code(name: "ContentView.swift", file: 1-ContentView.swift)
            }
            @Step {
                First, `import` ``IRLPDFScanContent`` and make it available as an `@ObservedObject` to your view
                @Code(name: "ContentView.swift", file: 2-ContentView.swift)
            }
            @Step {
                Now let's wrap our view in a `VStack` (as we will want to show the PDF or the Text) and then in `NavigationView` as we will add the Scan button to it
                @Code(name: "ContentView.swift", file: 3-ContentView.swift)
            }
            @Step {
                Now let's use the provided ``IRLPDFScanContent/IRLPDFView`` to display a PDF on screen, if available
                @Code(name: "ContentView.swift", file: 4-ContentView.swift)
            }
            @Step {
                We add our scan button, here we use the `await`  but we could also pass a `nil` completion handler
                @Code(name: "ContentView.swift", file: 5-ContentView.swift)
            }
            @Step {
                Finaly, let's make sure we update our `pdfView` if we observed a new scan
                @Code(name: "ContentView.swift", file: FINAL-ContentView.swift)
            }
            @Step {
                Build & Run
                
                ⚠️ Make sure you run it on a Device!
                @Code(name: "ContentView.swift", file: FINAL-ContentView.swift)
            }
        }
    }
}
